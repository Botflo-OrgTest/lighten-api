
Doing docker stuf : 

1) 
 brew update
brew install docker-compose 

https://devcenter.heroku.com/articles/docker

2.0)  # https://docs.docker.com/engine/installation/mac/ 
	( allowing a mac to work with it )

2) # docker-machine create default --driver virtualbox  

3) docker ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

	

4) setup the .profile : 
	
$ docker-machine env default
export DOCKER_TLS_VERIFY="1"


5) 

clean it up. 
...

bash-3.2$ pwd
/Users/x/fp/sfor/heroku/lighten-django-demo
bash-3.2$ docker-compose up web 
Pulling herokuPostgresql (postgres:latest)...
latest: Pulling from library/postgres
7268d8f794c4: Downloading [===========>                 


	( does not detach )

6)  Fixup the local DB ... 
	( and the normal push thing) 

eval $(docker-machine env default)
docker-compose run web pGython manage.py migrate
docker-compose run web python manage.py createsuperuser --username=user --email=user@example.com
	: password : password12345 



7) on model change, 
	https://devcenter.heroku.com/articles/upgrading-heroku-postgres-databases


8) 
	
for generating a migration file after model changes: `docker-compose run web python manage.py makemigrations` (edited)

[7:45] 
which you can then apply with `docker-compose run web python manage.py migrate

	
9) http://192.168.99.100:8080/api/ 

	Notes : 	 
		

10) Example of a module update. 
  524  vi hello/admin.py
  525  vi hello/models.py
  526  docker-compose run web python manage.py makemigrations
  527  docker-compose run web python manage.py migrate

	
	
11) Running arbitrary commands on the docker image : 

bash-3.2$ pwd ; docker-compose run web uptime 
/Users/x/fp/sfor/heroku/lighten-django-demo
 04:32:20 up  1:40,  0 users,  load average: 0.01, 0.02, 0.05
bash-3.2$ 



12) poller goes roudn and round : 
	 docker-compose up web 
	
	This is a live thing, code gets pushed all the time... kinda. 

13) 
		
	Working on a tool to send things to the data base. 

14) env setup 
	docker-machine env

# race?  with other shells
docker-machine env > ~/.docker.env.tmp
mv ~/.docker.env.tmp ~/.docker.env
. ~/.docker.env


15)   run web manage create stupper suer. 


16)  load up the test vecotrs into the prod db: 
    (venv) bbbb:lighten-django-demo x$ heroku run python manage.py  lightenclitool -- -- --writetodb  data/json1/json_schema/orgs.t.p.??.json  data/json1/json_schema/orgs.t.p.???.json 


17)  loading the test vectors now does not require the '--' 'z .. .maybe... 


	

	

